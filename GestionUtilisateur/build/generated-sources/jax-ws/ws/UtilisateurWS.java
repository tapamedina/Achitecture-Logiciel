
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UtilisateurWS", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UtilisateurWS {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns ws.Utilisateur
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://ws/", className = "ws.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://ws/", className = "ws.LoginResponse")
    @Action(input = "http://ws/UtilisateurWS/loginRequest", output = "http://ws/UtilisateurWS/loginResponse")
    public Utilisateur login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Utilisateur>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listerUtilisateurs", targetNamespace = "http://ws/", className = "ws.ListerUtilisateurs")
    @ResponseWrapper(localName = "listerUtilisateursResponse", targetNamespace = "http://ws/", className = "ws.ListerUtilisateursResponse")
    @Action(input = "http://ws/UtilisateurWS/listerUtilisateursRequest", output = "http://ws/UtilisateurWS/listerUtilisateursResponse")
    public List<Utilisateur> listerUtilisateurs();

    /**
     * 
     * @param arg0
     * @return
     *     returns ws.Utilisateur
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listerUtilisateur", targetNamespace = "http://ws/", className = "ws.ListerUtilisateur")
    @ResponseWrapper(localName = "listerUtilisateurResponse", targetNamespace = "http://ws/", className = "ws.ListerUtilisateurResponse")
    @Action(input = "http://ws/UtilisateurWS/listerUtilisateurRequest", output = "http://ws/UtilisateurWS/listerUtilisateurResponse")
    public Utilisateur listerUtilisateur(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "supprimerUtilisateur", targetNamespace = "http://ws/", className = "ws.SupprimerUtilisateur")
    @ResponseWrapper(localName = "supprimerUtilisateurResponse", targetNamespace = "http://ws/", className = "ws.SupprimerUtilisateurResponse")
    @Action(input = "http://ws/UtilisateurWS/supprimerUtilisateurRequest", output = "http://ws/UtilisateurWS/supprimerUtilisateurResponse")
    public boolean supprimerUtilisateur(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modifierUtilisateur", targetNamespace = "http://ws/", className = "ws.ModifierUtilisateur")
    @ResponseWrapper(localName = "modifierUtilisateurResponse", targetNamespace = "http://ws/", className = "ws.ModifierUtilisateurResponse")
    @Action(input = "http://ws/UtilisateurWS/modifierUtilisateurRequest", output = "http://ws/UtilisateurWS/modifierUtilisateurResponse")
    public boolean modifierUtilisateur(
        @WebParam(name = "arg0", targetNamespace = "")
        Utilisateur arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ajouterUtilisateur", targetNamespace = "http://ws/", className = "ws.AjouterUtilisateur")
    @ResponseWrapper(localName = "ajouterUtilisateurResponse", targetNamespace = "http://ws/", className = "ws.AjouterUtilisateurResponse")
    @Action(input = "http://ws/UtilisateurWS/ajouterUtilisateurRequest", output = "http://ws/UtilisateurWS/ajouterUtilisateurResponse")
    public boolean ajouterUtilisateur(
        @WebParam(name = "arg0", targetNamespace = "")
        Utilisateur arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modifierToken", targetNamespace = "http://ws/", className = "ws.ModifierToken")
    @ResponseWrapper(localName = "modifierTokenResponse", targetNamespace = "http://ws/", className = "ws.ModifierTokenResponse")
    @Action(input = "http://ws/UtilisateurWS/modifierTokenRequest", output = "http://ws/UtilisateurWS/modifierTokenResponse")
    public boolean modifierToken(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
